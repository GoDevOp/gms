# EXAMPLE ATHEME CONF FOR GMS COMPATIBILITY

# What you MUST keep is XMLRPC, perl, nickserv/list, the freenode/* modules,
# and memoserv send, as well as the configuration for the GMS account.

loadmodule "modules/protocol/charybdis";
loadmodule "modules/backend/opensex";
loadmodule "modules/crypto/posix";

loadmodule "modules/nickserv/main";
#loadmodule "modules/nickserv/access";
loadmodule "modules/nickserv/drop";
loadmodule "modules/nickserv/ghost";
loadmodule "modules/nickserv/group";
loadmodule "modules/nickserv/help";
loadmodule "modules/nickserv/hold";
loadmodule "modules/nickserv/identify";
loadmodule "modules/nickserv/info";
loadmodule "modules/nickserv/list";
loadmodule "modules/nickserv/listmail";
#loadmodule "modules/nickserv/listownmail";
#loadmodule "modules/nickserv/login";
loadmodule "modules/nickserv/logout";
loadmodule "modules/nickserv/mark";
loadmodule "modules/nickserv/freeze";
loadmodule "modules/nickserv/listchans";
loadmodule "modules/nickserv/register";
loadmodule "modules/nickserv/resetpass";
loadmodule "modules/nickserv/return";
loadmodule "modules/nickserv/setpass";
#loadmodule "modules/nickserv/sendpass";
loadmodule "modules/nickserv/sendpass_user";
loadmodule "modules/nickserv/set";
loadmodule "modules/nickserv/set_accountname";
#loadmodule "modules/nickserv/set_privmsg";
#loadmodule "modules/nickserv/set_private";
#loadmodule "modules/nickserv/subscribe";
#loadmodule "modules/nickserv/enforce";
loadmodule "modules/nickserv/status";
loadmodule "modules/nickserv/taxonomy";
loadmodule "modules/nickserv/vacation";
loadmodule "modules/nickserv/verify";
loadmodule "modules/nickserv/vhost";

loadmodule "modules/chanserv/main";
loadmodule "modules/chanserv/akick";
loadmodule "modules/chanserv/ban";
#loadmodule "modules/chanserv/unban_self";
loadmodule "modules/chanserv/close";
loadmodule "modules/chanserv/clear";
loadmodule "modules/chanserv/clear_bans";
loadmodule "modules/chanserv/clear_users";
loadmodule "modules/chanserv/count";
loadmodule "modules/chanserv/drop";
#loadmodule "modules/chanserv/fflags";
loadmodule "modules/chanserv/flags";
loadmodule "modules/chanserv/ftransfer";
loadmodule "modules/chanserv/getkey";
loadmodule "modules/chanserv/halfop";
loadmodule "modules/chanserv/help";
loadmodule "modules/chanserv/hold";
loadmodule "modules/chanserv/info";
loadmodule "modules/chanserv/invite";
loadmodule "modules/chanserv/kick";
loadmodule "modules/chanserv/list";
loadmodule "modules/chanserv/mark";
loadmodule "modules/chanserv/op";
#loadmodule "modules/chanserv/owner";
#loadmodule "modules/chanserv/protect";
#loadmodule "modules/chanserv/quiet";
loadmodule "modules/chanserv/recover";
loadmodule "modules/chanserv/register";
loadmodule "modules/chanserv/set";
#loadmodule "modules/chanserv/set_gameserv";
#loadmodule "modules/chanserv/set_limitflags";
#loadmodule "modules/chanserv/set_private";
loadmodule "modules/chanserv/status";
loadmodule "modules/chanserv/taxonomy";
loadmodule "modules/chanserv/template";
loadmodule "modules/chanserv/topic";
loadmodule "modules/chanserv/voice";
loadmodule "modules/chanserv/why";
#loadmodule "modules/chanserv/xop";

loadmodule "modules/operserv/main";
loadmodule "modules/operserv/akill";
#loadmodule "modules/operserv/clearchan";
#loadmodule "modules/operserv/clones";
loadmodule "modules/operserv/compare";
#loadmodule "modules/operserv/greplog";
loadmodule "modules/operserv/help";
loadmodule "modules/operserv/identify";
loadmodule "modules/operserv/ignore";
loadmodule "modules/operserv/jupe";
loadmodule "modules/operserv/mode";
loadmodule "modules/operserv/modinspect";
loadmodule "modules/operserv/modlist";
loadmodule "modules/operserv/modload";
loadmodule "modules/operserv/modunload";
loadmodule "modules/operserv/modreload";
loadmodule "modules/operserv/noop";
#loadmodule "modules/operserv/override";
#loadmodule "modules/operserv/rakill";
loadmodule "modules/operserv/rehash";
loadmodule "modules/operserv/restart";
loadmodule "modules/operserv/rmatch";
loadmodule "modules/operserv/rnc";
loadmodule "modules/operserv/rwatch";
loadmodule "modules/operserv/sgline";
loadmodule "modules/operserv/shutdown";
#loadmodule "modules/operserv/soper";
loadmodule "modules/operserv/specs";
loadmodule "modules/operserv/sqline";
loadmodule "modules/operserv/update";
loadmodule "modules/operserv/uptime";
#loadmodule "modules/groupserv/main";

loadmodule "modules/misc/httpd";
#loadmodule "modules/xmlrpc/main";

loadmodule "modules/transport/xmlrpc";
loadmodule "modules/scripting/perl";
loadscript "modules/freenode/gmsserv.pl";
loadmodule "modules/freenode/freenode_prevent_registration";

loadmodule "modules/memoserv/main";
loadmodule "modules/memoserv/send";
loadmodule "modules/memoserv/read";
loadmodule "modules/memoserv/list";


loadmodule "modules/memoserv/main";
loadmodule "modules/memoserv/help";
loadmodule "modules/memoserv/send";
loadmodule "modules/memoserv/sendops";
loadmodule "modules/memoserv/sendgroup";
loadmodule "modules/memoserv/list";
loadmodule "modules/memoserv/read";
loadmodule "modules/memoserv/forward";
loadmodule "modules/memoserv/delete";
loadmodule "modules/memoserv/ignore";



serverinfo {
	name = "services.";
	desc = "Atheme IRC Services";
	numeric = "00A";
	recontime = 10;
	netname = "misconfigured network";
	adminname = "misconfigured admin";
	adminemail = "misconfigured@admin.tld";
	mta = "/usr/sbin/sendmail";
	loglevel = { error; info; admin; network; wallops; };
	maxlogins = 5;
	maxusers = 5;
	maxnicks = 5;
	maxchans = 5;
	mdlimit = 30;
	emaillimit = 10;
	emailtime = 300;
	auth = none;
	casemapping = rfc1459;
};

uplink "hades.arpa" {
	host = "127.0.0.1";
	password = "password";
	port = 6667;
};

nickserv {
	nick = "NickServ";
	user = "NickServ";
	host = "services.";
	real = "Nickname Services";
	expire = 0;
};

chanserv {
	nick = "ChanServ";
	user = "ChanServ";
	host = "services.";
	real = "Channel Services";
	changets;
	expire = 0;
};

operserv {
	nick = "OperServ";
	user = "OperServ";
	host = "services.";
	real = "Operator Services";
};

memoserv {
	/* (*)nick
	 * The nickname we want MemoServ to have.
	 */
	nick = "MemoServ";

	/* (*)user
	 * The username we want MemoServ to have.
	 */
	user = "MemoServ";

	/* (*)host
	 * The hostname we want MemoServ to have.
	 */
	host = "services.int";

	/* (*)real
	 * The realname (gecos) information we want MemoServ to have.
	 */
	real = "Memo Services";

	/* (*)aliases
	 * Command aliases for MemoServ.
	 */
	aliases {
	};
	
	/* (*)access
	 * Command access changes for MemoServ.
	 */
	access {
	};

	/* (*)maxmemos
	 * What is the maximum amount of memos a user can have in their inbox?
	 */
	maxmemos = 666421337;
};

httpd {
	host = "127.0.0.1";
	port = 8080;
};

logfile "var/account.log" { register; set; };
logfile "var/commands.log" { commands; };

general {
	chan = "#services";
	join_chans;
	leave_chans;
	uflags = { hidemail; };
	cflags = { verbose; guard; };
	commit_interval = 5;
	uplink_sendq_limit = 1048576;
	language = "en";
};

operclass "sra" {
	privs = {
		special:ircop;
	};

	privs = {
		user:auspex;
		user:admin;
		user:sendpass;
		user:vhost;
		user:mark;
		user:hold;
		user:regnolimit;
	};

	privs = {
		chan:auspex;
		chan:admin;
		chan:cmodes;
		chan:joinstaffonly;
	};

	privs = {
		general:auspex;
		general:viewprivs;
		general:flood;
		general:metadata;
		general:admin;
	};

	privs = {
		operserv:omode;
		operserv:akill;
		operserv:massakill;
		#operserv:akill-anymask;
		operserv:jupe;
		operserv:noop;
		operserv:global;
		operserv:grant;
		#operserv:override;
	};
};

operclass "GMS" {
	privs = {
		special:GMS;
		user:auspex;
		chan:auspex;
		general:flood;
	};
};

operator "admin" {
	operclass = "sra";
};

operator "GMS" {
	operclass = "GMS";
};
